import { supabase } from './supabase';

const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

export async function sendTelegramMessage(chatId: string, message: string) {
  try {
    const response = await fetch(`${TELEGRAM_API_URL}/sendMessage`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        parse_mode: 'HTML'
      })
    });

    if (!response.ok) {
      throw new Error('Failed to send Telegram message');
    }

    return await response.json();
  } catch (error) {
    console.error('Error sending Telegram message:', error);
    throw error;
  }
}

export async function notifySubscriptionExpiry(sellerId: string) {
  try {
    const { data: seller } = await supabase
      .from('sellers')
      .select('telegram_chat_id, name, subscription_status')
      .eq('id', sellerId)
      .single();

    if (!seller?.telegram_chat_id) return;

    const message = `
üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ</b>

–£–≤–∞–∂–∞–µ–º—ã–π ${seller.name},

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ "${seller.subscription_status}" —Å–∫–æ—Ä–æ –∏—Å—Ç–µ–∫–∞–µ—Ç. –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞–º–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.

<i>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ù–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</i>
    `.trim();

    await sendTelegramMessage(seller.telegram_chat_id, message);
  } catch (error) {
    console.error('Error sending subscription notification:', error);
  }
}

export async function notifyNewMessage(userId: string, message: string) {
  try {
    const { data: user } = await supabase
      .from('telegram_users')
      .select('telegram_id')
      .eq('user_id', userId)
      .single();

    if (!user?.telegram_id) return;

    await sendTelegramMessage(user.telegram_id, message);
  } catch (error) {
    console.error('Error sending message notification:', error);
  }
}